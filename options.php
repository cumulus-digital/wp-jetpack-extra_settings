<?php
namespace WP_JETPACK_EXTRA;
if (!defined('ABSPATH')) die('No direct access allowed');

class Options {

	static $settingsName;
	static $defaults;

	static function init() {

		if( defined( 'DOING_AUTOSAVE' ) && DOING_AUTOSAVE ) {
			return false;
		}

		self::$settingsName = PREFIX;
		self::$defaults = [
			PREFIX . '_disable_images_sitemap' => 0,
			PREFIX . '_disable_videos_sitemap' => 0,
			PREFIX . '_disable_backup_menu' => 0,
			PREFIX . '_show_modules_menu' => 0,
		];

		\add_action( 'admin_menu', [__CLASS__, 'addAdminMenu'] );
		\add_action( 'admin_init', [__CLASS__, 'register'] );

		// add options to the plugins page
		\add_action(
			'plugin_action_links_' . BASE_FILENAME,
			[__CLASS__, 'addActionLink']
		);
		
		self::execute();

	}

	static function loadOptions() {
		return \get_option(
			self::$settingsName,
			self::$defaults
		);
	}

	static function addAdminMenu() {
		\remove_submenu_page('jetpack', 'backup');
		\add_options_page(
			'Extra Jetpack Settings',
			'Jetpack Extras',
			'manage_options',
			PREFIX,
			[__CLASS__, 'outputPage']
		);
	}

	static function addActionLink($links) {
		if ( ! \current_user_can('manage_options')) {
			return;
		}

		$settings = [
			'<a href="' . 
				\esc_url(
					\admin_url(
						'/options-general.php?page=' .
						PREFIX
					)
				) .
			'">' .
			__( 'Settings' ) . '</a>'
		];
		return array_merge($links, $settings);

	}

	static function register() {
		\register_setting(
			PREFIX,
			self::$settingsName,
			[
				'default' => self::$defaults
			]
		);

		\add_settings_section(
			PREFIX . '_options_enable', 
			'Hidden Extras',
			function() {
				echo 'Enable hidden extra Jetpack menus';
			}, 
			PREFIX
		);

			\add_settings_field( 
				PREFIX . '_show_modules_menu', 
				'Show Modules Menu', 
				function() {
					self::renderCheckbox(PREFIX . '_show_modules_menu');
				},
				PREFIX, 
				PREFIX . '_options_enable',
				[
					'label_for' => PREFIX . '_show_modules_menu'
				]
			);

		\add_settings_section(
			PREFIX . '_options_disable', 
			'Disable Extra Sitemaps',
			function() {
				echo 'Optionally disable extra sitemaps generated by Jetpack by checking the box next to the sitemap type you would like to remove.';
			}, 
			PREFIX
		);

			\add_settings_field( 
				PREFIX . '_disable_images_sitemap', 
				'Image Attachment Sitemap', 
				function() {
					self::renderCheckbox(PREFIX . '_disable_images_sitemap');
				},
				PREFIX, 
				PREFIX . '_options_disable',
				[
					'label_for' => PREFIX . '_disable_images_sitemap'
				]
			);

			\add_settings_field( 
				PREFIX . '_disable_videos_sitemap', 
				'Video Attachment Sitemap', 
				function() {
					self::renderCheckbox(PREFIX . '_disable_videos_sitemap');
				},
				PREFIX, 
				PREFIX . '_options_disable',
				[
					'label_for' => PREFIX . '_disable_videos_sitemap'
				]
			);

	}

	static function renderCheckbox($name) {
		$options = self::loadOptions();
		?>
		<input type="hidden" name="<?=self::$settingsName?>[<?=$name?>]" value="0">
		<input type='checkbox' id="<?=$name?>" name="<?=self::$settingsName?>[<?=$name?>]" <?php
			\checked(
				array_key_exists($name, $options) ? $options[$name] : 0,
				1
			); 
		?> value="1">
		<?php
	}

	static function outputPage() {
		?>
		<form action='options.php' method='post'>

			<h1>Jetpack Extra Options</h1>
			<h2></h2>

			<?php
			\settings_fields( self::$settingsName );
			\do_settings_sections( self::$settingsName );
			\submit_button();
			?>

		</form>
		<?php
	}

	static function execute() {
		\add_action( 'init', function(){
			$options = self::loadOptions();

			if (
				array_key_exists(PREFIX . '_disable_images_sitemap', $options) &&
				$options[PREFIX . '_disable_images_sitemap'] == 1
			) {
				\add_filter( 'jetpack_sitemap_image_skip_post', '__return_true' );
			}

			if (
				array_key_exists(PREFIX . '_disable_videos_sitemap', $options) &&
				$options[PREFIX . '_disable_videos_sitemap'] == 1
			) {
				\add_filter( 'jetpack_sitemap_video_skip_post', '__return_true' );
			}

			if (
				array_key_exists(PREFIX . '_disable_backup_menu', $options) &&
				$options[PREFIX . '_disable_backup_menu'] == 1
			) {
				\add_filter( 'jetpack_admin_menu', function() {
					
				});
			}

			if (
				array_key_exists(PREFIX . '_show_modules_menu', $options) &&
				$options[PREFIX . '_show_modules_menu'] == 1
			) {
				\add_action( 'jetpack_admin_menu', function() {
					\add_submenu_page(
						'jetpack',
						'Jetpack Modules',
						'Modules',
						'manage_options',
						'jetpack_modules',
						'jetpack'
					);
				});
			}

		});
	}

}

\add_action('jetpack_loaded', function() {
	Options::init();
});